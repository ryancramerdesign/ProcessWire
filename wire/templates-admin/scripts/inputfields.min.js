var InputfieldDebugMode=false;function consoleLog(a){if(InputfieldDebugMode){console.log(a)}}var InputfieldDependenciesProcessing=false;function InputfieldDependencies(){if(InputfieldDependenciesProcessing){return}function g(k){k=jQuery.trim(k);var l=k.substring(0,1);var j=k.substring(k.length-1,k.length);if((l=='"'||l=="'")&&l==j){k=k.substring(1,k.length-1)}return k}function h(j){return f(g(j))}function a(l){var k="";var j=l.indexOf(".");if(j>0){k=l.substring(j+1);l=l.substring(0,j)}return{field:l,subfield:k}}function f(m,k){m=jQuery.trim(m);if(m.length>0&&!jQuery.isNumeric(m)){return m}if(m.length==0){var j=typeof k;if(j!="undefined"){if(j=="integer"){return 0}if(j=="float"){return 0}return m}else{return m}}var n=m.indexOf(".");var l=m.lastIndexOf(".");if(n==-1&&/^-?\d+$/.test(m)){return parseInt(m)}if(l>-1&&n!=l){return m}if(/^-?[\d.]+$/.test(m)){return parseFloat(m)}return m}function b(m,k,l,n){var j=0;switch(k){case"=":if(l==n){j++}break;case"!=":if(l!=n){j++}break;case">":if(l>n){j++}break;case"<":if(l<n){j++}break;case">=":if(l>=n){j++}break;case"<=":if(l<=n){j++}break;case"*=":case"%=":if(l.indexOf(n)>-1){j++}break}consoleLog("Field "+m+" - Current value: "+l);consoleLog("Field "+m+" - Matched? "+(j>0?"YES":"NO"));return j}function d(n,p,l){var s=null;var v;consoleLog("getCheckboxFieldAndValue(see-next-line, "+p+", "+l+")");consoleLog(n);if(l=="count"||l=="count-checkbox"){consoleLog("Using count checkbox condition");s=$("#wrap_Inputfield_"+p+" :input");if(s.length){v=$("#wrap_Inputfield_"+p+" :checked").length;n.subfield="count-checkbox";return{field:s,value:v,condition:n}}return null}consoleLog("Using checkbox value or label comparison option");v=[];for(var o=0;o<n.values.length;o++){var q=new String(n.values[o]);q=g(q.replace(/\s/g,"_"));consoleLog("conditionValue: "+q);var w="#Inputfield_"+p+"_"+q;s=$(w);if(s.length){consoleLog("Found checkbox via value "+w);var m="";if(s.is(":checked")){m=s.val();consoleLog("Checkbox IS checked: "+w)}else{consoleLog("Checkbox is NOT checked: "+w)}if(m.length){v.push(m)}continue}if(q.length==0||q.match(/^[0-9]+$/)){consoleLog("Unable to locate checkbox "+w+", skipping");continue}consoleLog("Attempting to find checkbox by label: "+q);s=$("#wrap_Inputfield_"+p);var j=s.find("input:checked");for(var u=0;u<j.length;u++){var k=j.eq(u);var r=k.closest("label");if(r.length){var t=jQuery.trim(r.text());if(t==q){consoleLog("Matching checked label found: "+q);v.push(t)}else{consoleLog("Matching checked label not found: "+q)}}}}if(s){return{field:s,value:v,condition:n}}return null}function e(o,x){InputfieldDependenciesProcessing=true;var B=x.attr("id").replace(/wrap_Inputfield_/,"");if(InputfieldDebugMode){consoleLog("-------------------------------------------------------------------");consoleLog('Field "'+B+'" detected a change to a dependency field! Beginning dependency checks...')}var m=0;var I=true;var u=0;var t=0;for(var H=0;H<o.length;H++){var D=o[H];if(InputfieldDebugMode){consoleLog("----");consoleLog("Start Dependency "+H);consoleLog("Condition type: "+D.type);consoleLog("Field: "+D.field);if(D.subfield.length>0){consoleLog("Subfield: "+D.subfield)}consoleLog("Operator: "+D.operator);consoleLog("Required value: "+D.value)}var r=0;for(var p=0;p<D.fields.length;p++){var E=a(D.fields[p]);var q=E.field;var j=E.subfield;var z=null;var A=$("#Inputfield_"+q);var k=false;if(A.length==0){A=$("#"+q)}if(A.length==0){consoleLog("Detected possible checkbox or radio: "+D.field+D.operator+D.value);var G=d(D,q,j);if(G){A=G.field;z=G.value;D=G.condition;k=true}}if(A.length==0){consoleLog("Unable to locate field: "+q);continue}if(z===null){if(A.attr("type")=="checkbox"){z=A.is(":checked")?A.val():null}else{z=A.val()}}var l=[];if(z==null){z=""}if(D.subfield=="count"){z=z.length}if(typeof z=="object"){l=jQuery.makeArray(z)}else{if(typeof z=="array"){l=z}else{l[0]=z}}var F=1;if(D.operator=="!="){F=(l.length*D.values.length)}if((A.attr("type")=="checkbox"||A.attr("type")=="radio")&&!A.is(":checked")){l[1]="0"}for(var y=0;y<l.length;y++){for(var C=0;C<D.values.length;C++){var w=f(l[y],D.values[C]);r+=b(q,D.operator,w,D.values[C])}}if(r>=F){break}}consoleLog("----");if(D.type=="show"){if(r>=F){}else{I=false}}else{if(D.type=="required"){if(r>0){u++}else{t++}}}}var s=u>0&&t==0;if(I){consoleLog('Determined that field "'+B+'" should be visible.');if(x.is(".InputfieldStateHidden")){x.removeClass("InputfieldStateHidden").fadeIn();m++;consoleLog("Field is now visible.")}else{consoleLog("Field is already visible.")}}else{consoleLog('Determined that field "'+B+'" should be hidden.');if(!x.is(".InputfieldStateHidden")){x.addClass("InputfieldStateHidden").hide();consoleLog("Field is now hidden.");m++}else{consoleLog("Field is already hidden.")}if(s){consoleLog("Field is required but cancelling that since it is not visible.");s=false}}if(s&&u>0){consoleLog('Determined that field "'+B+'" should be required.');x.addClass("InputfieldStateRequired").find(":input:visible[type!=hidden]").addClass("required")}else{if(!s&&t>0){consoleLog('Determined that field "'+B+'" should not be required.');x.removeClass("InputfieldStateRequired").find(":input.required").removeClass("required")}}if(m>0){consoleLog(m+" visibility changes were made.");InputfieldColumnWidths();$(window).resize()}InputfieldDependenciesProcessing=false}function c(y,l,r){var z=r.attr("data-"+y+"-if");if(!z||z.length<1){return l}z=$("<div />").html(z).text();consoleLog("-------------------------------------------------------------------");consoleLog('Analyzing "'+y+'" selector: '+z);var u=z.match(/(^|,)([^,]+)/g);for(var v=0;v<u.length;v++){var x=u[v];var m=x.match(/^[,\s]*([_.|a-zA-Z0-9]+)(=|!=|<=|>=|<|>|%=)([^,]+),?$/);if(!m){continue}var j=m[1];var p=m[2];var w=m[3];var q="";var s=[];var k=[];if(j.indexOf("|")>-1){consoleLog("OR field dependency: "+j);s=j.split("|")}else{s=[j]}var C=a(j);j=C.field;q=C.subfield;if(InputfieldDebugMode){consoleLog("Field: "+j);if(q.length){consoleLog("Subfield: "+q)}consoleLog("Operator: "+p);consoleLog("value: "+w)}if(w.indexOf("|")>-1){consoleLog("OR value dependency: "+w);k=w.split("|");for(var A=0;A<k.length;A++){k[A]=h(k[A])}}else{k=[h([w])]}var B={type:y,field:j,fields:s,subfield:q,operator:p,value:w,values:k};l[l.length]=B;for(var o=0;o<s.length;o++){var C=a(s[o]);var D=C.field;var t=$("#Inputfield_"+D);if(t.length==0){consoleLog("Unable to find inputfield by: #Inputfield_"+D);t=$("#"+D);if(t.length==0){consoleLog("Unable to find inputfield by: #"+D)}}if(t.length==0){t=$("#wrap_Inputfield_"+D).find(":input");if(t.length==0){consoleLog("Unable to find inputfield by: #wrap_Inputfield_"+D+" :input")}}if(t.length){consoleLog("Attaching change event for: "+t.attr("name"));t.change(function(){e(l,r)})}else{consoleLog("Failed to find inputfield, no change event attached")}}}return l}function i(k){var j=[];j=c("show",j,k);j=c("required",j,k);e(j,k)}InputfieldDependenciesProcessing=true;$(".InputfieldStateShowIf, .InputfieldStateRequiredIf").each(function(){i($(this))});InputfieldDependenciesProcessing=false}function InputfieldColumnWidths(){var f=null;var c=null;function a(i){if(i.is(".InputfieldStateHidden")){return 0}var j=i.attr("style");if(typeof j=="undefined"||!j){return i.width()}var k=parseInt(j.match(/width:\s*(\d+)/i)[1]);if(!i.attr("data-original-width")){i.attr("data-original-width",k)}return k}function e(j){var i=parseInt(j.attr("data-original-width"));if(i==0){i=a(j)}return i}function d(j,k,i){j.width(k+"%");if(i){j.css("opacity",0.5);j.animate({opacity:1},150,function(){})}consoleLog("setWidth("+j.attr("id")+": "+k+"%")}function h(i){return i.height()}function b(i,l){var j=h(i);consoleLog("setHeight: "+i.find("label").text()+" >> "+l+" ("+j+")");if(j==l){return}if(i.hasClass("InputfieldStateCollapsed")){return}var m=l-j;if(m<0){m=0}var n=i.children(".InputfieldContent, .ui-widget-content");if(m==0){}else{consoleLog("Adjusting "+i.attr("id")+" from "+j+" to "+l);var k=$("<div class='maxColHeightSpacer'></div>");n.append(k);n.hide();k.height(m);n.show()}}function g(m){var q=m.nextUntil(".InputfieldColumnWidthFirst",".InputfieldColumnWidth:not(.InputfieldStateHidden)");var l=m.is(".InputfieldStateHidden")?0:a(m);var t=m.is(".InputfieldStateHidden")?null:m;var r=t==null?0:l;var s=q.length;if(m.is(".InputfieldStateHidden")){s--;var n=q.eq(0)}else{var n=m}if(c){n.find(".maxColHeightSpacer").remove();q.find(".maxColHeightSpacer").remove()}var j=100-(s*f);var i=c?h(n):0;q.removeClass("InputfieldColumnWidthFirstTmp");q.each(function(){t=$(this);r=a(t);l+=r;if(c){var u=h(t);if(u>i){i=u}}});if(c){if(InputfieldDebugMode){var o=n.find("label").text();consoleLog("maxColHeight: "+o+" = "+i)}if(i>0){b(n,i);q.each(function(){b($(this),i)})}}if(l<j){consoleLog("Expand width of row because rowWidth < maxRowWidth ("+l+" < "+j+")");var p=(j-l);consoleLog("leftoverWidth: "+p);r=r+p;if(t==null&&!m.is(".InputfieldStateHidden")){t=m}if(t){var k=e(t);if(k>0&&r<k){r=k}d(t,r,true)}}else{if(l>j){consoleLog("Reduce width of row because rowWidth > maxRowWidth ("+l+" > "+j+")");if(!m.is(".InputfieldStateHidden")){q=m.add(q)}l=0;q.each(function(){t=$(this);r=e(t);if(r>0){d(t,r,false)}l+=r});var p=j-l;r+=p;var k=e(t);if(k>0&&r<k){r=k}d(t,r,false)}}if(m.is(".InputfieldStateHidden")){n.addClass("InputfieldColumnWidthFirstTmp")}}$("form.InputfieldForm").each(function(){var i=$(this);if(i.hasClass("InputfieldFormNoWidths")){return}f=i.attr("data-colspacing");if(typeof f=="undefined"){f=1}c=i.hasClass("InputfieldFormNoHeights")?false:true;$(".Inputfield:not(.InputfieldColumnWidth)",i).addClass("InputfieldColumnWidthFirst");$(".InputfieldColumnWidthFirst.InputfieldColumnWidth:visible",i).each(function(){g($(this))})});$(document).on("change",".InputfieldColumnWidth :input",function(){var i=$(this).closest(".InputfieldColumnWidth");var j=i.is(".InputfieldColumnWidthFirst")?i:i.prev(".InputfieldColumnWidthFirst");g(j)})}function InputfieldStates(){$(".Inputfield:not(.collapsed9) > .InputfieldHeader, .Inputfield:not(.collapsed9) > .ui-widget-header").addClass("InputfieldStateToggle");$(document).on("click",".InputfieldStateToggle, .toggle-icon",function(){var j=$(this);var i=j.closest(".Inputfield");var h=j.hasClass("toggle-icon");var e=h?j:i.children(".InputfieldHeader, .ui-widget-header").find(".toggle-icon");var f=i.hasClass("InputfieldStateCollapsed");var g=i.hasClass("InputfieldStateWasCollapsed");if(f||g||h){i.addClass("InputfieldStateWasCollapsed");i.trigger(f?"openReady":"closeReady");i.toggleClass("InputfieldStateCollapsed",100,function(){i.trigger(f?"opened":"closed");var l=i.find(":input:visible");if(l.length==1&&!l.is("button")){var k=l.attr("type");if(l.is("textarea")||k=="text"||k=="email"||k=="url"||k=="number"){l.focus()}}});e.toggleClass(e.attr("data-to"));setTimeout("InputfieldColumnWidths()",500)}else{if(typeof jQuery.ui!="undefined"){var d=e.css("color");var c=i.children(".InputfieldHeader, .ui-widget-header").css("color");e.css("color",c);e.effect("pulsate",300,function(){e.css("color",d)})}i.find(":input:visible:eq(0)").focus()}return false});var a=$(".Inputfields .InputfieldStateCollapsed > .InputfieldHeader i.toggle-icon, .Inputfields .InputfieldStateCollapsed > .ui-widget-header i.toggle-icon");a.toggleClass(a.attr("data-to"));if(typeof config!=="undefined"&&config.debug){$("label.InputfieldHeader > i.toggle-icon").hover(function(){var c=$(this).parent("label");if(c.length==0){return}var d=c.attr("for").replace(/^Inputfield_/,"");c.append(" <span class='detail'>"+d+"</span>")},function(){var c=$(this).parent("label");if(c.length==0){return}c.find("span.detail").remove()})}$("#content .InputfieldFormFocusFirst:not(.InputfieldFormNoFocus)").find("input[type=text]:enabled:first:not(.hasDatepicker):not(.InputfieldNoFocus)").each(function(){var c=$(this);if(c.val()){return}if(c.offset().top<$(window).height()){window.setTimeout(function(){if(c.is(":visible")){c.focus()}},250)}});var b=$(".InputfieldFormConfirm");if(b.length){b.on("change",":input",function(){$(this).closest(".Inputfield").addClass("InputfieldStateChanged")});b.on("submit",function(){$(this).addClass("InputfieldFormSubmitted")});window.addEventListener("beforeunload",function(d){var c=$(".InputfieldFormConfirm:not(.InputfieldFormSubmitted) .InputfieldStateChanged");if(c.length==0){return}var f=b.attr("data-confirm")+"\n";c.each(function(){var e=$(this).find(".InputfieldHeader:eq(0)").text();f+="\n• "+$.trim(e)});(d||window.event).returnValue=f;return f})}}function InputfieldIntentions(){$(".InputfieldForm").each(function(){var a=$(this);var b=null;var c=null;a.submit(function(){if(!$(this).hasClass("nosubmit")){return}if(!c){return}var e=null;var d=c.closest(".Inputfields");do{e=d.find("input[type=submit]:visible, button[type=submit]:visible");if(e.length>0){break}d=d.parent().closest(".Inputfields")}while(d.length>0);if(e.length>0){var f=e.eq(0);$("html, body").animate({scrollTop:f.offset().top},"fast");f.focus()}return false}).on("focus","input, select",function(){if(b===null){b=a.find("input[type=submit], button[type=submit]").length}if(b<2){return}a.addClass("nosubmit");c=$(this)}).on("blur","input, select",function(){a.removeClass("nosubmit")})})}var InputfieldWindowResizeQueued=false;function InputfieldWindowResizeActions(){consoleLog("InputfieldWindowResizeActions()");InputfieldColumnWidths();InputfieldWindowResizeQueued=false}jQuery(document).ready(function(b){InputfieldStates();InputfieldDependencies();InputfieldIntentions();setTimeout(function(){InputfieldColumnWidths()},100);var c=function(){if(InputfieldWindowResizeQueued){return}InputfieldWindowResizeQueued=true;setTimeout("InputfieldWindowResizeActions()",2000)};var a=function(){if(InputfieldWindowResizeQueued){return}InputfieldWindowResizeQueued=true;setTimeout("InputfieldWindowResizeActions()",500);return true};b(window).resize(c);b("ul.WireTabs > li > a").click(a);b(document).on("reload",".Inputfield",function(f){var h=b(this);var d=h.closest("form");var g=h.attr("id").replace("wrap_Inputfield_","");var e=d.attr("action")+"&field="+g;consoleLog("Inputfield reload: "+g);b.get(e,function(j){var i=b(j).find("#"+h.attr("id")).children(".InputfieldContent");h.children(".InputfieldContent").html(i.html());if(typeof jQuery.ui!="undefined"){h.effect("highlight",1000)}h.trigger("reloaded")});f.stopPropagation()})});