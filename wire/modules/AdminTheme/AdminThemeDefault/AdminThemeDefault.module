<?php

class AdminThemeDefault extends AdminTheme implements Module, ConfigurableModule {

	public static function getModuleInfo() {
		return array(
			'title' => 'Default Admin Theme',
			'version' => 1,
			'summary' => 'Minimal admin theme that supports all ProcessWire features.',
			'autoload' => 'template=admin'
			); 
	}

	public function init() {
		parent::init(); 
		if($this->isCurrent()) {
			$customStyleFolder = wire('config')->urls->templates . 'AdminThemeDefault';
			$styleFile = ($this->colors ? 'main-' . $this->colors : 'main') . '.css';
			if (file_exists(wire('config')->paths->modules . 'AdminTheme/' . __CLASS__ . '/styles/' . $styleFile)) {
				$this->page->stylesheet = wire('config')->urls->modules . 'AdminTheme/' . __CLASS__ . '/styles/' . $styleFile;
			} elseif (file_exists(wire('config')->paths->templates . __CLASS__ . '/' . $styleFile)) {
				$this->page->stylesheet = wire('config')->urls->templates . __CLASS__ . '/' . $styleFile;
			}
		}
	}

	public function ___install() {
		parent::___install();
	}

	public static function getModuleConfigInputfields(array $data) {
		$inputfields = new InputfieldWrapper();
		$field = wire('modules')->get('InputfieldRadios');
		$field->attr('name', 'colors');
		$field->label = __('Color Set'); 
		$field->addOption('classic', __('Classic'));
		$field->addOption('warm', __('Warm'));
		$field->addOption('modern', __('Modern'));
		$field->addOption('futura', __('Futura'));

		// Add custom stylesheets from /site/template/AdminThemeDefault folder
		$customStyleDir = wire('config')->paths->templates . 'AdminThemeDefault';
		if (file_exists($customStyleDir)) {
			foreach (new DirectoryIterator($customStyleDir) as $fileInfo) {
				if($fileInfo->isDot() || $fileInfo->getExtension() != 'css') continue;
				$fileName = str_replace('main-', '', $fileInfo->getBasename('.css'));
				$prettyName = ucwords(str_replace('-', ' ', $fileName));
				$field->addOption($fileName, __($prettyName));
			}
		}
		
		$field->attr('value', isset($data['colors']) ? $data['colors'] : ''); 
		$field->optionColumns = 1; 
		$inputfields->add($field); 		
		return $inputfields;
	}
}

