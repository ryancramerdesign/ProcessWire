<?php

/**
 * A Page List Selector for selecting a single page
 *
 */
class InputfieldAsmSelect extends InputfieldSelectMultiple implements InputfieldHasArrayValue {

	protected $asmOptions = array();

	public static function getModuleInfo() {
		return array(
			'title' => __('asmSelect', __FILE__),
			'version' => 117,
			'summary' => __('Multiple selection, progressive enhancement to select multiple', __FILE__), // Module Summary
			'permanent' => true, 
			);
	}

	public function init() {

		// asmSelect requires jQuery UI, so we enforce it being loaded here
		wire('modules')->get('JqueryCore'); // required by jQuery UI
		wire('modules')->get('JqueryUI'); 

		parent::init(); 

		$this->setAsmSelectOption('sortable', true); 

		// an optional edit or detail link where items can be modified or viewed
		// i.e. /path/to/page/?id={value} where {value} is replaced with option value
		$this->setAsmSelectOption('editLink', ''); 

		// only applicable if editLink is set. set to false if you don't want edit link to be modal
		$this->setAsmSelectOption('editLinkModal', true);

		if($this->wire('adminTheme')) {
			// replace jquery ui icon default with a font-awesome icon
			$this->setAsmSelectOption('removeLabel', "<i class='fa fa-trash'></i>");

			// replace jquery ui icon default with a font-awesome icon
			$this->setAsmSelectOption('sortLabel', "<i class='fa fa-fw fa-sort'></i>");
		}
			
		// cancel the 'size' attribute used by select multiple
		$this->set('size', null); 
	}

	public function setAsmSelectOption($key, $value) {
		$this->asmOptions[$key] = $value; 
	}
	
	public function ___render() {
		if(!empty($this->asmOptions['editLink'])) {
			$this->wire('modules')->get('JqueryUI')->use('modal');
		}

		// require javascript and css
		$class = $this->className(); 
		$info = self::getModuleInfo();
		$ver = $info['version'];
		$jsfile = $this->wire('config')->debug ? 'jquery.asmselect.js' : 'jquery.asmselect.min.js';

		$this->config->scripts->add($this->config->urls->$class . "asmselect/$jsfile?v=$ver");
		$this->config->styles->add($this->config->urls->$class . "$class.css?v=$ver");
		$this->config->styles->add($this->config->urls->$class . "asmselect/jquery.asmselect.css?v=$ver");

		$selectedOptions = $this->attr('value'); 
		
		foreach($selectedOptions as $id) {
			if(!isset($this->options[$id])) continue; 
			$label = $this->options[$id]; 
			unset($this->options[$id]); 	
			$this->addOption($id, $label); 
		}

		$this->config->js($this->id, $this->asmOptions); 

		return parent::___render();
		
	}
}
